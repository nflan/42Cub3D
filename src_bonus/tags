!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
brice_casting	brice_casting_bonus.c	/^void	brice_casting(t_info *info)$/;"	f	typeref:typename:void
cast_angle	brice_casting_bonus.c	/^void	cast_angle(t_info *info, t_casting *cast)$/;"	f	typeref:typename:void
cast_droit	brice_casting_bonus.c	/^void	cast_droit(t_info *info, t_casting *cast)$/;"	f	typeref:typename:void
casting_next	brice_casting_bonus.c	/^void	casting_next(t_info *info, t_casting *cast)$/;"	f	typeref:typename:void
check_angle	check_edge_tools_bonus.c	/^void	check_angle(t_info *info, t_casting *cast)$/;"	f	typeref:typename:void
check_door_text	door_bonus.c	/^void	check_door_text(t_info *info, t_casting *cast)$/;"	f	typeref:typename:void
check_east	check_edge_bonus.c	/^int	check_east(t_info *info, t_casting *cast)$/;"	f	typeref:typename:int
check_east_corner	check_edge_corner_bonus.c	/^int	check_east_corner(t_info *info, t_casting *cast, double tmp[2])$/;"	f	typeref:typename:int
check_north	check_edge_bonus.c	/^int	check_north(t_info *info, t_casting *cast)$/;"	f	typeref:typename:int
check_north_corner	check_edge_corner_bonus.c	/^int	check_north_corner(t_info *info, t_casting *cast, double tmp[2])$/;"	f	typeref:typename:int
check_south	check_edge_bonus.c	/^int	check_south(t_info *info, t_casting *cast)$/;"	f	typeref:typename:int
check_south_corner	check_edge_corner_bonus.c	/^int	check_south_corner(t_info *info, t_casting *cast, double tmp[2])$/;"	f	typeref:typename:int
check_west	check_edge_bonus.c	/^int	check_west(t_info *info, t_casting *cast)$/;"	f	typeref:typename:int
check_west_corner	check_edge_corner_bonus.c	/^int	check_west_corner(t_info *info, t_casting *cast, double tmp[2])$/;"	f	typeref:typename:int
choose_texture	casting_tools_bonus.c	/^void	choose_texture(t_info *info, t_casting *cast)$/;"	f	typeref:typename:void
close_door	door_bonus.c	/^void	close_door(t_info *info, t_door *door)$/;"	f	typeref:typename:void
create_trgb	ft_colors_bonus.c	/^int	create_trgb(int t, int r, int g, int b)$/;"	f	typeref:typename:int
distance	exit_tools_bonus.c	/^double	distance(double x0, double y0, double x1, double y1)$/;"	f	typeref:typename:double
do_it_pls	casting_tools_bonus.c	/^void	do_it_pls(t_info *info, t_casting *cast, int i)$/;"	f	typeref:typename:void
door_closed	auto_close_bonus.c	/^void	door_closed(t_info *info)$/;"	f	typeref:typename:void
free_sprite	liberation2_bonus.c	/^void	free_sprite(t_texture *tmp, t_info *info)$/;"	f	typeref:typename:void
free_texture	liberation2_bonus.c	/^void	free_texture(t_info *info, t_texture *texture)$/;"	f	typeref:typename:void
ft_add_text	ft_partext_bonus.c	/^int	ft_add_text(t_info *info, char *buf, int err)$/;"	f	typeref:typename:int
ft_charcheck	ft_check_map_bonus.c	/^int	ft_charcheck(t_info *info, char **map, int y, int x)$/;"	f	typeref:typename:int
ft_check_around	ft_check_map_tools_bonus.c	/^int	ft_check_around(char **map, int y, int x)$/;"	f	typeref:typename:int
ft_check_colors	ft_colors_bonus.c	/^int	ft_check_colors(char **tab)$/;"	f	typeref:typename:int
ft_check_doex	ft_check_map_bonus.c	/^int	ft_check_doex(t_info *info)$/;"	f	typeref:typename:int
ft_check_doors	ft_doors_bonus.c	/^int	ft_check_doors(char **map, int y, int x)$/;"	f	typeref:typename:int
ft_check_fill	ft_partext_bonus.c	/^int	ft_check_fill(char *buf)$/;"	f	typeref:typename:int
ft_check_map	ft_parse_bonus.c	/^int	ft_check_map(char *buf)$/;"	f	typeref:typename:int
ft_check_zero	ft_check_map_tools_bonus.c	/^int	ft_check_zero(char **map, int y, int x)$/;"	f	typeref:typename:int
ft_checkside	ft_check_map_tools_bonus.c	/^int	ft_checkside(char c)$/;"	f	typeref:typename:int
ft_closewin	main.c	/^int	ft_closewin(t_info *info, int err)$/;"	f	typeref:typename:int
ft_count_ind	liberation2_bonus.c	/^int	ft_count_ind(t_texture *text)$/;"	f	typeref:typename:int
ft_count_walldo	ft_doors_bonus.c	/^int	ft_count_walldo(char **map, int y, int x, int *i)$/;"	f	typeref:typename:int
ft_define_sm	cub3d_basic_bonus.c	/^void	ft_define_sm(t_info *info)$/;"	f	typeref:typename:void
ft_door_color	ft_coloring_bonus.c	/^void	ft_door_color(int rgb[3])$/;"	f	typeref:typename:void
ft_dooradd_back	ft_doors_bonus.c	/^void	ft_dooradd_back(t_door **door, t_door *new)$/;"	f	typeref:typename:void
ft_doornew	ft_doors_bonus.c	/^int	ft_doornew(t_door **door, int x, int y)$/;"	f	typeref:typename:int
ft_doors	ft_doors_bonus.c	/^int	ft_doors(t_info *info, int i)$/;"	f	typeref:typename:int
ft_draw_map	ft_print_map_bonus.c	/^void	ft_draw_map(t_info *info)$/;"	f	typeref:typename:void
ft_exit_color	ft_coloring2_bonus.c	/^void	ft_exit_color(int rgb[3])$/;"	f	typeref:typename:void
ft_fill_color	ft_colors_bonus.c	/^int	ft_fill_color(int *tofill, char *buf)$/;"	f	typeref:typename:int
ft_fill_minimap	ft_minimap_bonus.c	/^int	ft_fill_minimap(t_info *info, int x, int y, int pos[2])$/;"	f	typeref:typename:int
ft_fill_sprite	ft_partext_bonus.c	/^int	ft_fill_sprite(t_texture **text, char *path, int nb)$/;"	f	typeref:typename:int
ft_fill_str	ft_gnl_bonus.c	/^char	*ft_fill_str(char *str, char *buf)$/;"	f	typeref:typename:char *
ft_floor_color	ft_coloring_bonus.c	/^void	ft_floor_color(int rgb[3])$/;"	f	typeref:typename:void
ft_free	liberation_bonus.c	/^void	ft_free(t_info *info)$/;"	f	typeref:typename:void
ft_free_doors	liberation2_bonus.c	/^void	ft_free_doors(t_door *door)$/;"	f	typeref:typename:void
ft_free_map	liberation_bonus.c	/^void	ft_free_map(t_map *map)$/;"	f	typeref:typename:void
ft_free_texture	liberation_bonus.c	/^void	ft_free_texture(t_info *info, t_texture *text)$/;"	f	typeref:typename:void
ft_getmap	map_bonus.c	/^int	ft_getmap(t_info *info)$/;"	f	typeref:typename:int
ft_init_color_map	ft_print_map_bonus.c	/^void	ft_init_color_map(t_info *info, int ij[2], int rgb[3])$/;"	f	typeref:typename:void
ft_init_color_minimap	ft_minimap_bonus.c	/^void	ft_init_color_minimap(t_info *info, int pos[2], int rgb[3])$/;"	f	typeref:typename:void
ft_init_fd	ft_parse_bonus.c	/^int	ft_init_fd(t_info *info, char *file)$/;"	f	typeref:typename:int
ft_init_img	texture_bonus.c	/^int	ft_init_img(t_info *info, t_texture *text)$/;"	f	typeref:typename:int
ft_init_player_angle	ft_player_bonus.c	/^void	ft_init_player_angle(t_info *info, int y, int x)$/;"	f	typeref:typename:void
ft_init_sprite	ft_partext_bonus.c	/^int	ft_init_sprite(t_texture **text, char *path, DIR *fd)$/;"	f	typeref:typename:int
ft_init_window	main.c	/^int	ft_init_window(t_info *info)$/;"	f	typeref:typename:int
ft_launch_minimap	ft_minimap_bonus.c	/^int	ft_launch_minimap(t_info *info)$/;"	f	typeref:typename:int
ft_longest	map_bonus.c	/^size_t	ft_longest(t_map *map)$/;"	f	typeref:typename:size_t
ft_map	ft_print_map_bonus.c	/^void	ft_map(t_info *info)$/;"	f	typeref:typename:void
ft_mapadd_back	map_bonus.c	/^void	ft_mapadd_back(t_map **map, t_map *new)$/;"	f	typeref:typename:void
ft_maplen	map_bonus.c	/^size_t	ft_maplen(t_map *chain)$/;"	f	typeref:typename:size_t
ft_mapnew	map_bonus.c	/^int	ft_mapnew(t_map **map, char *buf)$/;"	f	typeref:typename:int
ft_mapping	ft_minimap_bonus.c	/^void	ft_mapping(t_info *info)$/;"	f	typeref:typename:void
ft_nb_player	ft_player_bonus.c	/^int	ft_nb_player(char **map)$/;"	f	typeref:typename:int
ft_next_texture	cub3d_basic2_bonus.c	/^void	ft_next_texture(t_info *info)$/;"	f	typeref:typename:void
ft_open_img	texture_bonus.c	/^int	ft_open_img(t_info *info, t_texture *text)$/;"	f	typeref:typename:int
ft_parsarg	ft_parse_bonus.c	/^int	ft_parsarg(t_info *info)$/;"	f	typeref:typename:int
ft_parse	ft_parse_bonus.c	/^int	ft_parse(t_info *info, char *file)$/;"	f	typeref:typename:int
ft_parsing_info_err	cub3d_basic_bonus.c	/^int	ft_parsing_info_err(t_info *info)$/;"	f	typeref:typename:int
ft_parsingage	ft_check_map_bonus.c	/^int	ft_parsingage(t_info *info)$/;"	f	typeref:typename:int
ft_perror	ft_tools_bonus.c	/^int	ft_perror(char *error, char *str)$/;"	f	typeref:typename:int
ft_perror_free	ft_tools_bonus.c	/^int	ft_perror_free(char *error, char *str, int i)$/;"	f	typeref:typename:int
ft_play	ft_parse_bonus.c	/^int	ft_play(t_info *info, char *buf)$/;"	f	typeref:typename:int
ft_player_color	ft_coloring_bonus.c	/^void	ft_player_color(int rgb[3])$/;"	f	typeref:typename:void
ft_poserr	ft_tools_bonus.c	/^int	ft_poserr(int y, int x, char *str)$/;"	f	typeref:typename:int
ft_print_map	ft_print_map_bonus.c	/^int	ft_print_map(t_info *info, int x, int y, int rgb[3])$/;"	f	typeref:typename:int
ft_print_mapping	ft_print_bonus.c	/^void	ft_print_mapping(t_map *map)$/;"	f	typeref:typename:void
ft_print_text	ft_print_bonus.c	/^void	ft_print_text(t_info *info)$/;"	f	typeref:typename:void
ft_putstr_error	ft_tools_bonus.c	/^int	ft_putstr_error(char *error)$/;"	f	typeref:typename:int
ft_putstr_frror	ft_tools_bonus.c	/^int	ft_putstr_frror(char *error, char *str, int i)$/;"	f	typeref:typename:int
ft_sides	ft_check_map_tools_bonus.c	/^int	ft_sides(char **map)$/;"	f	typeref:typename:int
ft_space_color	ft_coloring_bonus.c	/^void	ft_space_color(int rgb[3])$/;"	f	typeref:typename:void
ft_sprite_new	ft_sprite_tools_bonus.c	/^int	ft_sprite_new(t_texture **text, char *path, int i)$/;"	f	typeref:typename:int
ft_spriteadd_back	ft_sprite_tools_bonus.c	/^void	ft_spriteadd_back(t_texture **sprite, t_texture *new)$/;"	f	typeref:typename:void
ft_test_line	ft_gnl_bonus.c	/^unsigned int	ft_test_line(char *str)$/;"	f	typeref:typename:unsigned int
ft_text_new	ft_partext_bonus.c	/^int	ft_text_new(t_texture **text, char *buf)$/;"	f	typeref:typename:int
ft_valid_elems	ft_check_map_tools_bonus.c	/^int	ft_valid_elems(char c)$/;"	f	typeref:typename:int
ft_valid_map	ft_check_map_bonus.c	/^int	ft_valid_map(t_info *info)$/;"	f	typeref:typename:int
ft_wall_color	ft_coloring_bonus.c	/^void	ft_wall_color(int rgb[3])$/;"	f	typeref:typename:void
get_line	ft_gnl_bonus.c	/^char	*get_line(char *str, int fd)$/;"	f	typeref:typename:char *
get_next_line	ft_gnl_bonus.c	/^char	*get_next_line(int fd)$/;"	f	typeref:typename:char *
get_next_x	door_bonus.c	/^double	get_next_x(t_info *info)$/;"	f	typeref:typename:double
get_next_y	door_bonus.c	/^double	get_next_y(t_info *info)$/;"	f	typeref:typename:double
get_now	auto_close_bonus.c	/^unsigned long long	get_now(t_info *info)$/;"	f	typeref:typename:unsigned long long
get_proj_screen	casting_tools_bonus.c	/^void	get_proj_screen(t_info *info, t_casting *cast)$/;"	f	typeref:typename:void
get_texture	texture_bonus.c	/^int	get_texture(t_info *info)$/;"	f	typeref:typename:int
get_the_exit	cast_exit.c	/^void	get_the_exit(t_info *info, t_casting *cast)$/;"	f	typeref:typename:void
get_the_wall	casting_tools_bonus.c	/^void	get_the_wall(t_info *info, t_casting *cast, int i)$/;"	f	typeref:typename:void
get_this_door	moove_bonus.c	/^t_door	*get_this_door(t_door *list, int x, int y)$/;"	f	typeref:typename:t_door *
hook	hook_bonus.c	/^int	hook(int keycode, t_info *info)$/;"	f	typeref:typename:int
hook_mouse	hook_mouse_bonus.c	/^int	hook_mouse(int keycode, int x, int y, t_info *info)$/;"	f	typeref:typename:int
hook_mouse_mouv	hook_mouse_bonus.c	/^int	hook_mouse_mouv(int x, int y, t_info *info)$/;"	f	typeref:typename:int
hook_mouse_release	hook_mouse_bonus.c	/^int	hook_mouse_release(int keycode, int x, int y, t_info *info)$/;"	f	typeref:typename:int
hook_release	hook_bonus.c	/^int	hook_release(int keycode, t_info *info)$/;"	f	typeref:typename:int
init_exit	exit_tools_bonus.c	/^void	init_exit(t_info *info, t_casting *cast)$/;"	f	typeref:typename:void
init_hook	cub3d_basic_bonus.c	/^t_hooking	init_hook(void)$/;"	f	typeref:typename:t_hooking
init_info	cub3d_basic_bonus.c	/^void	init_info(t_info *info, char *file)$/;"	f	typeref:typename:void
init_texture	cub3d_basic_bonus.c	/^void	init_texture(t_info *info)$/;"	f	typeref:typename:void
is_door_open	moove_bonus.c	/^int	is_door_open(t_info *info, int y, int x)$/;"	f	typeref:typename:int
is_in_corner	brice_casting_bonus.c	/^int	is_in_corner(t_info *info, double curr[2], double ray[2], int hit)$/;"	f	typeref:typename:int
is_on_door	check_edge_corner_bonus.c	/^int	is_on_door(t_info *info, t_casting *cast)$/;"	f	typeref:typename:int
is_wall	moove_bonus.c	/^int	is_wall(t_info *info, double y, double x)$/;"	f	typeref:typename:int
looping_hook	hook_bonus.c	/^int	looping_hook(t_info *info)$/;"	f	typeref:typename:int
main	main.c	/^int	main(int argc, char **argv)$/;"	f	typeref:typename:int
mouse_move	hook_bonus.c	/^void	mouse_move(t_info *info)$/;"	f	typeref:typename:void
mv_back	moove_back_bonus.c	/^void	mv_back(t_info *info)$/;"	f	typeref:typename:void
mv_back_x	moove_back_bonus.c	/^void	mv_back_x(t_info *info, double oldy)$/;"	f	typeref:typename:void
mv_back_y	moove_back_bonus.c	/^void	mv_back_y(t_info *info)$/;"	f	typeref:typename:void
mv_for	moove_for_bonus.c	/^void	mv_for(t_info *info)$/;"	f	typeref:typename:void
mv_forward_x	moove_for_bonus.c	/^void	mv_forward_x(t_info *info, double oldy)$/;"	f	typeref:typename:void
mv_forward_y	moove_for_bonus.c	/^void	mv_forward_y(t_info *info)$/;"	f	typeref:typename:void
mv_left	moove_left_bonus.c	/^void	mv_left(t_info *info)$/;"	f	typeref:typename:void
mv_left_x	moove_left_bonus.c	/^void	mv_left_x(t_info *info, double oldy)$/;"	f	typeref:typename:void
mv_left_y	moove_left_bonus.c	/^void	mv_left_y(t_info *info)$/;"	f	typeref:typename:void
mv_right	moove_right_bonus.c	/^void	mv_right(t_info *info)$/;"	f	typeref:typename:void
mv_right_x	moove_right_bonus.c	/^void	mv_right_x(t_info *info, double oldy)$/;"	f	typeref:typename:void
mv_right_y	moove_right_bonus.c	/^void	mv_right_y(t_info *info)$/;"	f	typeref:typename:void
my_mlx_pixel_put	cub3d_basic2_bonus.c	/^void	my_mlx_pixel_put(t_data *data, int x, int y, int color)$/;"	f	typeref:typename:void
new_init_player	ft_player_bonus.c	/^int	new_init_player(t_info *info)$/;"	f	typeref:typename:int
next_curr	casting_tools_bonus.c	/^void	next_curr(t_casting *cast, int side)$/;"	f	typeref:typename:void
norme_angle1	casting_utils_bonus.c	/^void	norme_angle1(t_info *info, t_casting *cast)$/;"	f	typeref:typename:void
norme_angle2	casting_utils_bonus.c	/^void	norme_angle2(t_info *info, t_casting *cast)$/;"	f	typeref:typename:void
norme_droit1	casting_utils_bonus.c	/^void	norme_droit1(t_info *info, t_casting *cast, t_door *door)$/;"	f	typeref:typename:void
norme_droit2	casting_utils_bonus.c	/^void	norme_droit2(t_info *info, t_casting *cast, t_door *door)$/;"	f	typeref:typename:void
open_door	door_bonus.c	/^void	open_door(t_info *info)$/;"	f	typeref:typename:void
pls_help_exit	cast_exit.c	/^int	pls_help_exit(t_info *info, t_casting *cast)$/;"	f	typeref:typename:int
print_doors	ft_print_bonus.c	/^void	print_doors(t_door *door)$/;"	f	typeref:typename:void
print_tab	ft_print_bonus.c	/^void	print_tab(char **tab)$/;"	f	typeref:typename:void
put_col	affiche_bonus.c	/^void	put_col(t_info *info, t_casting *cast, int y)$/;"	f	typeref:typename:void
put_col_exit	cast_exit.c	/^int	put_col_exit(t_info *info, t_casting *cast, int y, double *curr)$/;"	f	typeref:typename:int
put_the_wall	affiche_bonus.c	/^void	put_the_wall(t_info *info, t_casting *cast, int *i)$/;"	f	typeref:typename:void
put_the_wall_exit	cast_exit.c	/^void	put_the_wall_exit(t_info *info, t_casting *cast, int y)$/;"	f	typeref:typename:void
restart_cast	casting_utils_bonus.c	/^void	restart_cast(t_info *info, t_casting *cast, int i)$/;"	f	typeref:typename:void
set_curr	check_edge_bonus.c	/^void	set_curr(t_casting *cast, double x, double y)$/;"	f	typeref:typename:void
tracing_again	cub3d_basic2_bonus.c	/^void	tracing_again(t_info *info)$/;"	f	typeref:typename:void
turn_left	moove_bonus.c	/^void	turn_left(t_info *info)$/;"	f	typeref:typename:void
turn_right	moove_bonus.c	/^void	turn_right(t_info *info)$/;"	f	typeref:typename:void
vector_angle	exit_tools_bonus.c	/^double	vector_angle(double v0[2], double v1[2])$/;"	f	typeref:typename:double
x_coords	cast_exit.c	/^void	x_coords(t_info *info, t_casting *cast, double coords[2],$/;"	f	typeref:typename:void
