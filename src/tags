!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
brice_casting	brice_casting.c	/^void	brice_casting(t_info *info)$/;"	f	typeref:typename:void
cast_angle	brice_casting.c	/^void	cast_angle(t_info *info, t_casting *cast)$/;"	f	typeref:typename:void
cast_droit	brice_casting.c	/^void	cast_droit(t_info *info, t_casting *cast)$/;"	f	typeref:typename:void
casting2	brice_casting.c	/^void	casting2(t_info *info, t_casting *cast, int i)$/;"	f	typeref:typename:void
check_angle	check_edge_tools.c	/^void	check_angle(t_info *info, t_casting *cast)$/;"	f	typeref:typename:void
check_east	check_edge.c	/^int	check_east(t_info *info, t_casting *cast)$/;"	f	typeref:typename:int
check_east_corner	check_edge_corner.c	/^int	check_east_corner(t_info *info, t_casting *cast, double tmp[2])$/;"	f	typeref:typename:int
check_north	check_edge.c	/^int	check_north(t_info *info, t_casting *cast)$/;"	f	typeref:typename:int
check_north_corner	check_edge_corner.c	/^int	check_north_corner(t_info *info, t_casting *cast, double tmp[2])$/;"	f	typeref:typename:int
check_south	check_edge.c	/^int	check_south(t_info *info, t_casting *cast)$/;"	f	typeref:typename:int
check_south_corner	check_edge_corner.c	/^int	check_south_corner(t_info *info, t_casting *cast, double tmp[2])$/;"	f	typeref:typename:int
check_west	check_edge.c	/^int	check_west(t_info *info, t_casting *cast)$/;"	f	typeref:typename:int
check_west_corner	check_edge_corner.c	/^int	check_west_corner(t_info *info, t_casting *cast, double tmp[2])$/;"	f	typeref:typename:int
choose_texture	casting_tools.c	/^void	choose_texture(t_info *info, t_casting *cast)$/;"	f	typeref:typename:void
closewin	cub3d_basic2.c	/^int	closewin(t_info *info)$/;"	f	typeref:typename:int
create_trgb	ft_colors.c	/^int	create_trgb(int t, int r, int g, int b)$/;"	f	typeref:typename:int
do_it_pls	casting_tools.c	/^void	do_it_pls(t_info *info, t_casting *cast, int i)$/;"	f	typeref:typename:void
free_char_char	liberation.c	/^void	free_char_char(char **str)$/;"	f	typeref:typename:void
free_func	liberation.c	/^void	free_func(t_info *info)$/;"	f	typeref:typename:void
free_texture	liberation.c	/^void	free_texture(t_info *info, t_texture *texture)$/;"	f	typeref:typename:void
ft_add_text	ft_partext.c	/^int	ft_add_text(t_info *info, char *buf)$/;"	f	typeref:typename:int
ft_charcheck	ft_check_map.c	/^int	ft_charcheck(char **map, int y, int x)$/;"	f	typeref:typename:int
ft_check_around	ft_check_map_tools.c	/^int	ft_check_around(char **map, int y, int x)$/;"	f	typeref:typename:int
ft_check_colors	ft_colors.c	/^int	ft_check_colors(char **tab)$/;"	f	typeref:typename:int
ft_check_fill	ft_partext.c	/^int	ft_check_fill(char *buf)$/;"	f	typeref:typename:int
ft_check_map	ft_parse.c	/^int	ft_check_map(char *buf)$/;"	f	typeref:typename:int
ft_check_zero	ft_check_map_tools.c	/^int	ft_check_zero(char **map, int y, int x)$/;"	f	typeref:typename:int
ft_checkside	ft_check_map_tools.c	/^int	ft_checkside(char c)$/;"	f	typeref:typename:int
ft_closewin	main.c	/^int	ft_closewin(t_info *info, int err)$/;"	f	typeref:typename:int
ft_fill_color	ft_colors.c	/^int	ft_fill_color(int *tofill, char *buf)$/;"	f	typeref:typename:int
ft_fill_str	ft_gnl.c	/^char	*ft_fill_str(char *str, char *buf)$/;"	f	typeref:typename:char *
ft_fill_text	ft_partext.c	/^int	ft_fill_text(t_texture *text, char *buf)$/;"	f	typeref:typename:int
ft_floor_color	ft_coloring.c	/^void	ft_floor_color(int rgb[3])$/;"	f	typeref:typename:void
ft_free	liberation.c	/^void	ft_free(t_info *info)$/;"	f	typeref:typename:void
ft_free_map	liberation.c	/^void	ft_free_map(t_map *map)$/;"	f	typeref:typename:void
ft_getmap	map.c	/^int	ft_getmap(t_info *info)$/;"	f	typeref:typename:int
ft_init_fd	ft_parse.c	/^int	ft_init_fd(t_info *info, char *file)$/;"	f	typeref:typename:int
ft_init_player_angle	ft_player.c	/^void	ft_init_player_angle(t_info *info, int y, int x)$/;"	f	typeref:typename:void
ft_init_window	main.c	/^int	ft_init_window(t_info *info)$/;"	f	typeref:typename:int
ft_longest	map.c	/^size_t	ft_longest(t_map *map)$/;"	f	typeref:typename:size_t
ft_mapadd_back	map.c	/^void	ft_mapadd_back(t_map **map, t_map *new)$/;"	f	typeref:typename:void
ft_maplen	map.c	/^size_t	ft_maplen(t_map *chain)$/;"	f	typeref:typename:size_t
ft_mapnew	map.c	/^int	ft_mapnew(t_map **map, char *buf)$/;"	f	typeref:typename:int
ft_nb_player	ft_player.c	/^int	ft_nb_player(char **map)$/;"	f	typeref:typename:int
ft_parsarg	ft_parse.c	/^int	ft_parsarg(t_info *info)$/;"	f	typeref:typename:int
ft_parse	ft_parse.c	/^int	ft_parse(t_info *info, char *file)$/;"	f	typeref:typename:int
ft_parsing_info_err	cub3d_basic.c	/^int	ft_parsing_info_err(t_info *info)$/;"	f	typeref:typename:int
ft_parsingage	ft_check_map.c	/^int	ft_parsingage(char **map)$/;"	f	typeref:typename:int
ft_perror	ft_tools.c	/^int	ft_perror(char *error, char *str)$/;"	f	typeref:typename:int
ft_perror_free	ft_tools.c	/^int	ft_perror_free(char *error, char *str, int i)$/;"	f	typeref:typename:int
ft_play	ft_parse.c	/^int	ft_play(t_info *info, char *buf)$/;"	f	typeref:typename:int
ft_player_color	ft_coloring.c	/^void	ft_player_color(int rgb[3])$/;"	f	typeref:typename:void
ft_poserr	ft_tools.c	/^int	ft_poserr(int y, int x, char *str)$/;"	f	typeref:typename:int
ft_print_mapping	ft_print.c	/^void	ft_print_mapping(t_map *map)$/;"	f	typeref:typename:void
ft_print_text	ft_print.c	/^void	ft_print_text(t_info *info)$/;"	f	typeref:typename:void
ft_putstr_error	ft_tools.c	/^int	ft_putstr_error(char *error)$/;"	f	typeref:typename:int
ft_putstr_frror	ft_tools.c	/^int	ft_putstr_frror(char *error, char *str, int i)$/;"	f	typeref:typename:int
ft_sides	ft_check_map_tools.c	/^int	ft_sides(char **map)$/;"	f	typeref:typename:int
ft_space_color	ft_coloring.c	/^void	ft_space_color(int rgb[3])$/;"	f	typeref:typename:void
ft_test_line	ft_gnl.c	/^unsigned int	ft_test_line(char *str)$/;"	f	typeref:typename:unsigned int
ft_valid_elems	ft_check_map_tools.c	/^int	ft_valid_elems(char c)$/;"	f	typeref:typename:int
ft_valid_map	ft_check_map.c	/^int	ft_valid_map(t_info *info)$/;"	f	typeref:typename:int
ft_wall_color	ft_coloring.c	/^void	ft_wall_color(int rgb[3])$/;"	f	typeref:typename:void
get_address	texture.c	/^void	get_address(t_info *info)$/;"	f	typeref:typename:void
get_line	ft_gnl.c	/^char	*get_line(char *str, int fd)$/;"	f	typeref:typename:char *
get_next_line	ft_gnl.c	/^char	*get_next_line(int fd)$/;"	f	typeref:typename:char *
get_proj_screen	casting_tools.c	/^void	get_proj_screen(t_info *info, t_casting *cast)$/;"	f	typeref:typename:void
get_texture	texture.c	/^int	get_texture(t_info *info)$/;"	f	typeref:typename:int
get_the_wall	casting_tools.c	/^void	get_the_wall(t_info *info, t_casting *cast, int i)$/;"	f	typeref:typename:void
hook	hook.c	/^int	hook(int keycode, t_info *info)$/;"	f	typeref:typename:int
hook_release	hook.c	/^int	hook_release(int keycode, t_info *info)$/;"	f	typeref:typename:int
init_hook	cub3d_basic.c	/^t_hooking	init_hook(void)$/;"	f	typeref:typename:t_hooking
init_info	cub3d_basic.c	/^void	init_info(t_info *info, char *file)$/;"	f	typeref:typename:void
init_texture	cub3d_basic.c	/^void	init_texture(t_info *info)$/;"	f	typeref:typename:void
is_in_corner	brice_casting.c	/^int	is_in_corner(t_info *info, double curr[2], double ray[2], int hit)$/;"	f	typeref:typename:int
is_on_door	check_edge_corner.c	/^int	is_on_door(t_info *info, t_casting *cast)$/;"	f	typeref:typename:int
is_wall	moove.c	/^int	is_wall(t_info *info, double y, double x)$/;"	f	typeref:typename:int
looping_hook	hook.c	/^int	looping_hook(t_info *info)$/;"	f	typeref:typename:int
main	main.c	/^int	main(int argc, char **argv)$/;"	f	typeref:typename:int
mv_back	moove_back.c	/^void	mv_back(t_info *info)$/;"	f	typeref:typename:void
mv_back_x	moove_back.c	/^void	mv_back_x(t_info *info, double oldy)$/;"	f	typeref:typename:void
mv_back_y	moove_back.c	/^void	mv_back_y(t_info *info)$/;"	f	typeref:typename:void
mv_for	moove_for.c	/^void	mv_for(t_info *info)$/;"	f	typeref:typename:void
mv_forward_x	moove_for.c	/^void	mv_forward_x(t_info *info, double oldy)$/;"	f	typeref:typename:void
mv_forward_y	moove_for.c	/^void	mv_forward_y(t_info *info)$/;"	f	typeref:typename:void
mv_left	moove_left.c	/^void	mv_left(t_info *info)$/;"	f	typeref:typename:void
mv_left_x	moove_left.c	/^void	mv_left_x(t_info *info, double oldy)$/;"	f	typeref:typename:void
mv_left_y	moove_left.c	/^void	mv_left_y(t_info *info)$/;"	f	typeref:typename:void
mv_right	moove_right.c	/^void	mv_right(t_info *info)$/;"	f	typeref:typename:void
mv_right_x	moove_right.c	/^void	mv_right_x(t_info *info, double oldy)$/;"	f	typeref:typename:void
mv_right_y	moove_right.c	/^void	mv_right_y(t_info *info)$/;"	f	typeref:typename:void
my_mlx_pixel_put	cub3d_basic2.c	/^void	my_mlx_pixel_put(t_data *data, int x, int y, int color)$/;"	f	typeref:typename:void
new_init_player	ft_player.c	/^int	new_init_player(t_info *info)$/;"	f	typeref:typename:int
next_curr	casting_tools.c	/^void	next_curr(t_casting *cast, int side)$/;"	f	typeref:typename:void
print_tab	ft_print.c	/^void	print_tab(char **tab)$/;"	f	typeref:typename:void
put_col	affiche.c	/^void	put_col(t_info *info, t_casting *cast, int y)$/;"	f	typeref:typename:void
put_the_wall	affiche.c	/^void	put_the_wall(t_info *info, t_casting *cast, int *i)$/;"	f	typeref:typename:void
set_curr	check_edge.c	/^void	set_curr(t_casting *cast, double x, double y)$/;"	f	typeref:typename:void
tracing_again	cub3d_basic2.c	/^void	tracing_again(t_info *info)$/;"	f	typeref:typename:void
turn_left	moove.c	/^void	turn_left(t_info *info)$/;"	f	typeref:typename:void
turn_right	moove.c	/^void	turn_right(t_info *info)$/;"	f	typeref:typename:void
